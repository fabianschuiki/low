/* Copyright (c) 2015 Fabian Schuiki */
import "stdio";
import "stdlib";

#int main() {
	test;
	"hello world";
	15236;
	845.234f;
	(gangsta);

	// postfix_expr
	test[blah];
	test();
	test(123, something, went, wrong, "loool");
	quack.blah;
	i++;
	n--;
	// (#int){hello, world};

	// unary_expr
	++i;
	--n;
	&foo;
	*bar;
	+test;
	-test;
	~test;
	!test;
	sizeof *test;
	sizeof(-blah);
	sizeof(#blah);

	// cast_expr
	(#int)test;

	// multiplicative_expr
	blah * (test / gamma) % something;

	// additive_expr
	some + thing - (more + awesome) * wat;

	// shift_expr
	barrel << 253 >> roll + all - the.things;

	// relational_expr
	{
		wat > 26;
		42 <= 42 * test - jhgf8934;
	}

	// equality_expr
	42 == 42;
	something != nothing;

	// bitwise_*_expr
	foo & bar | 42 ^ (*1235);

	// {and,or}_expr
	42 == 42 || 56 && gamma;

	// conditional_expr
	test == 42 ? something : something*other;

	// assignment_expr
	k = 125;
	++i = 1;
	--i = 523;

	// comma expression
	++i, ++y, --alpha, 56*235, (oifdjg);

	// selection_stmt
	if (i < 42) do_something();
	if (i > 42) { do_something(); }
	if (something) blah++; else nah--;
	if (something) { blah++; } else { nah--; }
throw_in_some_label:
	switch (i*2) {
	case 0:
		some.stuff.in.here;
	case something.test:
		break;
	default:
		return 12950;
	}

	// iteration_stmt
	while (n > 0) n = n/2;
	do --i; while (i > 0);
	for (;;) { something(); }
	for (i = 0;;) n += 2;
	for (; i < array.size;) n += 2;
	for (i = 0; i < array.size;) n += 2;
	for (i = 0; i < array.size; ++i) n += 2;

	// jump_stmt
	goto nowhere;
	continue;
	break;
	return;
	return stuff;
	return some, more, stuff;

	// declaration
	#int hello_world = 12509834;
	call(hello_world);
}

void ast_func_def_create() {
	int;
}

#int do_some_more_fance_stuff_here() {
	if (i != 0)
		++i;
	else
		return 0;
}

// int main(int argc, char **argv) {
// 	printf("Hello World\n");
// 	returnÂ 0;
// }
