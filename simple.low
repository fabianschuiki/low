/* Copyright (c) 2015 Fabian Schuiki */
int32 puts(int8* str);
void printf(int8* fmt, ...);

int8* fopen(int8*,int8*);
void fprintf(int8*,int8*,...);
void fclose(int8*);
int32 atoi(int8*);

void some_func(int32 alpha) {
	var int32 i = 128;
	i *= 256;
	return;
}

int8* form_a_string() {
	var int8* str = "formed a string";
	return str;
}

int32 main(int32 argc, int8** argv) {

	// Verify that we have enough arguments.
	if (argc <= 1) {
		// fprintf(stderr, "usage: %s NUM...\n", argv[0]);
		printf("usage: %s NUM...\n", argv[0]);
		return 1;
	}

	puts(argc == 2 ? #(int8*)form_a_string() : "multiple arguments provided");

	// Sum up the arguments.
	var int32 i;
	var int32 sum = 0;
	for (i = 1; i < argc; ++i) {
		var int32 n = atoi(argv[i]);
		sum = sum + n;
	}
	printf("%d\n", sum);

	// var float a;
	// var int b;
	// var int i = 4*4;
	printf("argc = \"%d\"\n", argc);

	// Dump the arguments we have received.
	var int32 i;
	for (i = 0; i < argc; ++i) {
		printf("arg #%d = %s\n", i, argv[i]);
	}

	var int8* fp = fopen("hello.txt", "w");
	fprintf(fp, "got %d arguments\n", argc);
	fclose(fp);

	var int8* str = "hello world";
	var int16* other = #(int16*)str;
	// some_func();
	puts(str);
	puts("What's going on?");
	puts(form_a_string());
	printf("Print a string %s, and its pointer %p\n", str, str);
	// return 42 + i;
	return #(int32)str[5];
}
